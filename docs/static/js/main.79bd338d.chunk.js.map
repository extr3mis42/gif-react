{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","id","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAmB7C,OACI,8BACI,uBAAMC,SAbO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAQd,UACI,6BAAKD,IACL,uBACIQ,GAAG,MACHC,KAAK,OACLC,MAAOV,EACPW,SAvBU,SAACR,GACvBF,EAAcE,EAAES,OAAOF,gB,+BCPlBG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,iDAEqCC,UAAUH,GAF/C,+DAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIKA,EAAKC,OAJV,uBAIVC,EAJU,EAIVA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRiB,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAVxB,kBAaXM,GAbW,4CAAH,sDCCNM,EAAc,SAAC,GAAsB,EAAnBpB,GAAoB,IAAjBiB,EAAgB,EAAhBA,MAAMT,EAAU,EAAVA,IAGpC,OACI,sBAAKa,UAAU,yCAAf,UACG,qBAAKC,IAAMd,EAAMe,IAAMN,IACvB,4BAAKA,QCJHO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECAd,SAACA,GAAc,IAAD,EAEXf,mBAAS,CAC/BsB,KAAM,GACNY,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAqBrC,OAdAC,qBAAU,WACNvB,EAAOC,GACFuB,MAAK,SAAAC,GAEEH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAK1B,CAACnB,IAGGoB,EDnB0BK,CAAYzB,GAAhCY,EAFwB,EAE7BL,KAAaY,EAFgB,EAEhBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDf,IAEjDmB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEQH,EAAOH,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIhB,aEbxBgC,EAAe,WAAM,MAIMzC,mBAAS,CAAC,cAJhB,mBAIvB0C,EAJuB,KAIX3C,EAJW,KAgB9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQ2C,EAAWlB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MC3BjC4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.79bd338d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories( cats => [ inputValue, ...cats ])\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit= { handleSubmit }>\r\n                <h1>{inputValue}</h1>\r\n                <input\r\n                    id=\"add\"\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGif = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=xVzTD1FrwjAVHG6Elim3DMPcz2uhiTzx`;\r\n    const resp = await fetch(url)\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id,title,url} ) => {\r\n\r\n    // console.log(id,title,url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n           <img src={ url } alt={ title }></img>\r\n           <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGif } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from '../components/GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGif(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n{/* images.map(img =>(\r\n                         <li key = { img.id }> { img.title }</li>\r\n                     ))\r\n\r\n                     es lo mismo\r\n                     images.map(({id,title}) => (\r\n                         <li key={id}> { title }</li>\r\n                     ))  */}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGif = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGif(category)\r\n            .then(imgs => {\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n            })\r\n\r\n\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'DB', 'Bk'];\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n\r\n    //  setCategories( cats => [ ...cats, 'Pokemon']); //crep que guarda lo de setCategorias en la variable cats y despues hace el insert \r\n\r\n    //  setCategories([...categories,'Pokemon']);     agrega al final\r\n    //  //setCategories(['Pokemon',...categories]);   agrega al principio\r\n    //  // setCategories(categories.push('Pokemon')); no jala :,v\r\n\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExportApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            {/* <button onClick = { handleAdd }>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GifExpertApp } from './GifExpertApp';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <GifExpertApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}